{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack:///./src/components/tags/TechTagStyled.jsx","webpack:///./src/components/tags/TechTag.jsx","webpack:///./src/templates/blogPostStyled.jsx","webpack:///./src/pages/about.jsx","webpack:///./src/components/sidebar/BioStyled.jsx","webpack:///./src/components/sidebar/Bio.jsx","webpack:///./src/components/sidebar/SocialLinksStyled.jsx","webpack:///./src/components/sidebar/SocialLinks.jsx","webpack:///./src/components/sidebar/TechTags.jsx","webpack:///./src/components/sidebar/SidebarStyled.jsx","webpack:///./src/components/sidebar/Sidebar.jsx"],"names":["strings","raw","H4Global","createGlobalStyle","slice","TechTagButton","styled","button","Tag","div","size","color","Svg","svg","TechTag","tag","tech","name","img","className","to","role","viewBox","xmlns","width","height","href","Array","isArray","map","n","key","d","defaultProps","PostPageMain","Sidebar","Heading","h2","aboutTags","AboutPage","labels","data","site","siteMetadata","tags","reduce","acc","label","find","item","title","style","react","nodejs","html","css","ProfileImgStyled","AuthorBioStyled","h3","SmallStyled","small","Bio","author","tagline","src","whitesky0109Avatar","alt","SideSocialLinks","SocialLinks","contacts","linkedin","github","stackoverflow","freecodecamp","twitter","TechTags","posts","labelMap","filter","node","frontmatter","includes","length","push","SiderbarMain","PageLinks","query","render","allMarkdownRemark","edges"],"mappings":"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","file":"component---src-pages-about-jsx-8c0fe8d7ca63d1b8bf89.js","sourcesContent":["export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import styled, { createGlobalStyle } from 'styled-components';\n\nconst H4Global = createGlobalStyle`\n  font-family: Raleway;\n`;\n\nconst TechTagButton = styled.button`\n  background: black;\n  border-radius: 20% 0 0 20%;\n  border-color: transparent;\n  font-family: Raleway;\n  font-size: .85rem;\n`;\n\nconst Tag = styled.div`\n  font-size: ${({ size }) => size}px;\n  color: ${({ color }) => color};\n`;\n\nconst Svg = styled.svg`\n  fill: ${({ color }) => color};\n`;\n\nexport default {\n  H4Global,\n  TechTagButton,\n  Tag,\n  Svg,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'gatsby';\n\nimport Styled from './TechTagStyled';\n\nconst TechTag = ({\n  tag, tech, name, size, color, img,\n}) => (\n  <div className=\"d-inline-block p-1\">\n    <Styled.H4Global />\n    <Link to={`/tags/${tag}/`}>\n      <Styled.TechTagButton className=\"text-white\">\n        <p className=\"d-inline\">{`${tech} `}</p>\n        <Styled.Tag className=\"d-inline\" size={size} color={color}>\n          <Styled.Svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} color={color}>\n            <title>{tech}</title>\n            {img != null && <image href={img} width={size} height={size} />}\n            {name != null && (\n              Array.isArray(name)\n                // eslint-disable-next-line react/no-array-index-key\n                ? (name.map((n) => <path key={n} d={n} />))\n                : (<path d={name} />)\n            )}\n          </Styled.Svg>\n        </Styled.Tag>\n      </Styled.TechTagButton>\n    </Link>\n\n  </div>\n\n);\n\nTechTag.propTypes = {\n  tag: PropTypes.string,\n  tech: PropTypes.string,\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  color: PropTypes.string,\n  img: PropTypes.string,\n};\n\nTechTag.defaultProps = {\n  tag: '',\n  tech: '',\n  name: '',\n  size: 20,\n  color: '',\n  img: null,\n};\n\nexport default TechTag;\n","import styled from 'styled-components';\n\nconst PostPageMain = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n\n  @media only screen and (max-width: 850px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n  }\n`;\n\nconst Sidebar = styled.div`\n  width: 90%;\n\n  @media only screen and (max-width: 850px) {\n    display: none;\n  }\n`;\n\nconst Heading = styled.h2`\n  font-family: Raleway;\n`;\n\nexport default {\n  PostPageMain,\n  Sidebar,\n  Heading,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport './index.css';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport TechTag from '../components/tags/TechTag';\n\nimport BlogPostStyled from '../templates/blogPostStyled';\n\nconst aboutTags = ['nodejs', 'react', 'html', 'css'];\n\nconst AboutPage = ({ data }) => {\n  const { labels } = data.site.siteMetadata;\n\n  const tags = aboutTags.reduce((acc, tag) => {\n    const label = labels.find((item) => item.tag === tag);\n    acc[tag] = label.name;\n    return acc;\n  }, {});\n\n  return (\n    <Layout>\n      <SEO title=\"About\" />\n      <BlogPostStyled.PostPageMain>\n        <BlogPostStyled.Sidebar className=\"px-4 py-2\">\n          <Sidebar />\n        </BlogPostStyled.Sidebar>\n\n        <div className=\"post-main\">\n          <SEO title=\"About\" />\n          <div className=\"mt-3\">\n            <BlogPostStyled.Heading>About</BlogPostStyled.Heading>\n            <p>\n              <i>\n                Developer Diary is a Gatsby Starter blog template created with\n                web developers in mind, but really, anyone can use it. It's\n                totally usable right out of the box, but minimalist enough to be\n                easily modifiable to suit your needs.\n              </i>\n            </p>\n            <br />\n            <h4>Features</h4>\n            <div>\n              <span className=\"text-success d-inline-block\" title=\"blazing\">\n                <FaCheckCircle size={26} style={{ color: 'success' }} />\n              </span>\n              <p className=\"d-inline-block ml-3 w-75 align-top\">\n                Blazing fast, as you'd expect from a Gatsby site\n              </p>\n            </div>\n            <div>\n              <span className=\"text-success d-inline-block\" title=\"tags\">\n                <FaCheckCircle size={26} style={{ color: 'success' }} />\n              </span>\n              <p className=\"d-inline-block ml-3 w-75 align-top\">\n                Tech tags designed for web developers\n              </p>\n              <div className=\"ml-5\">\n                <TechTag\n                  tag=\"react\"\n                  tech=\"React\"\n                  name={tags.react}\n                  color=\"deepskyblue\"\n                />\n                <TechTag\n                  tag=\"nodejs\"\n                  tech=\"Node.js\"\n                  name={tags.nodejs}\n                  color=\"lightgreen\"\n                />\n                <TechTag\n                  tag=\"html\"\n                  tech=\"HTML\"\n                  name={tags.html}\n                  color=\"darkorange\"\n                />\n                <TechTag\n                  tag=\"css\"\n                  tech=\"CSS\"\n                  name={tags.css}\n                  color=\"teal\"\n                />\n              </div>\n            </div>\n            <div className=\"mt-4\">\n              <span className=\"text-success d-inline-block\" title=\"prism\">\n                <FaCheckCircle size={26} style={{ color: 'success' }} />\n              </span>\n              <p className=\"d-inline-block ml-3 w-75 align-top\">\n                Includes Prism for code block styling in markdown files\n              </p>\n            </div>\n            <div>\n              <span className=\"text-success d-inline-block\" title=\"icons\">\n                <FaCheckCircle size={26} style={{ color: 'success' }} />\n              </span>\n              <p className=\"d-inline-block ml-3 w-75 align-top\">\n                Developer-relevant social-media icon links including GitHub,\n                Stack Overflow and freeCodeCamp\n              </p>\n            </div>\n            <div>\n              <span className=\"text-success d-inline-block\" title=\"mobile\">\n                <FaCheckCircle size={26} style={{ color: 'success' }} />\n              </span>\n              <p className=\"d-inline-block ml-3 w-75 align-top\">\n                Mobile responsive, of course\n              </p>\n            </div>\n          </div>\n        </div>\n      </BlogPostStyled.PostPageMain>\n    </Layout>\n  );\n};\n\nAboutPage.propTypes = {\n  data: PropTypes.instanceOf(Object),\n};\n\nAboutPage.defaultProps = {\n  data: {},\n};\n\nexport const pageQuery = graphql`\n  query aboutQuery {\n    site {\n      siteMetadata {\n        labels {\n          tag\n          tech\n          name\n          size\n          color\n        }\n      }\n    }\n  }\n`;\n\nexport default AboutPage;\n","import styled from 'styled-components';\n\nexport const ProfileImgStyled = styled.img`\n  border-radius: 50%;\n  box-shadow: 1px 1px 3px;\n  min-width: 100px;\n  max-width: 100px;\n`;\n\nexport const AuthorBioStyled = styled.h3`\n  font-family: Raleway;\n  font-size: 2vw;\n`;\n\nexport const SmallStyled = styled.small`\n  font-family: Raleway;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ProfileImgStyled, AuthorBioStyled,\n  SmallStyled,\n} from './BioStyled';\n\nimport whitesky0109Avatar from '../../images/whitesky0109.jpg';\n\n/** @type {React.FC} */\nconst Bio = ({ author, tagline }) => (\n  <div className=\"bio-main w-75\">\n    <ProfileImgStyled src={whitesky0109Avatar} alt=\"\" />\n    <AuthorBioStyled className=\"mt-2\">{author}</AuthorBioStyled>\n    <SmallStyled className=\"text-muted\">{tagline}</SmallStyled>\n  </div>\n);\n\nBio.propTypes = {\n  author: PropTypes.string,\n  tagline: PropTypes.string,\n};\n\nBio.defaultProps = {\n  author: '',\n  tagline: '',\n};\n\nexport default Bio;\n","import styled from 'styled-components';\n\nconst SideSocialLinks = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n`;\n\nexport default {\n  SideSocialLinks,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  FaLinkedin,\n  FaGithubSquare,\n  FaStackOverflow,\n  FaFreeCodeCamp,\n  FaTwitterSquare,\n} from 'react-icons/fa';\n\nimport Styled from './SocialLinksStyled';\nimport './sidebar.css';\n\n/** @type {React.FC} */\nconst SocialLinks = ({ contacts }) => (\n  <Styled.SideSocialLinks className=\"float-left mt-3 mb-3\">\n    <a className=\"text-secondary p-2\" href={contacts.linkedin}>\n      <span title=\"Linked In\">\n        <FaLinkedin size={26} style={{ color: 'secondary' }} />\n      </span>\n    </a>\n    <a className=\"text-secondary p-2\" href={contacts.github}>\n      <span title=\"GitHub\">\n        <FaGithubSquare size={26} style={{ color: 'secondary' }} />\n      </span>\n    </a>\n    <a className=\"text-secondary p-2\" href={contacts.stackoverflow}>\n      <span title=\"Stack Overflow\">\n        <FaStackOverflow size={26} style={{ color: 'secondary' }} />\n      </span>\n    </a>\n    <a className=\"text-secondary p-2\" href={contacts.freecodecamp}>\n      <span title=\"freeCodeCamp\">\n        <FaFreeCodeCamp size={26} style={{ color: 'secondary' }} />\n      </span>\n    </a>\n    <a className=\"text-secondary p-2\" href={contacts.twitter}>\n      <span title=\"Twitter\">\n        <FaTwitterSquare size={26} style={{ color: 'secondary' }} />\n      </span>\n    </a>\n  </Styled.SideSocialLinks>\n);\n\nSocialLinks.propTypes = {\n  contacts: PropTypes.instanceOf(Object),\n};\n\nSocialLinks.defaultProps = {\n  contacts: {},\n};\n\nexport default SocialLinks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TechTag from '../tags/TechTag';\n\n/** @type {React.FC} */\nconst TechTags = ({ labels, posts }) => {\n  const labelMap = {};\n  const tags = labels.reduce((acc, label) => {\n    labelMap[label.tag] = label;\n\n    const count = posts\n      .filter(({ node }) => node.frontmatter.tags.includes(label.tag) === true)\n      .length;\n\n    if (count > 0) {\n      acc.push(label.tag);\n    }\n\n    return acc;\n  }, []);\n\n  const getTechTags = (tagList) => tagList.map((tag) => {\n    const label = labelMap[tag];\n    return label && (\n    <TechTag\n      key={tag}\n      tag={label.tag}\n      tech={label.tech}\n      name={label.name}\n      size={label.size}\n      color={label.color}\n      img={label.img}\n    />\n    );\n  });\n\n  return (\n    <>\n      <h4>Tech Topics</h4>\n      <div className=\"d-block\">{getTechTags(tags)}</div>\n    </>\n  );\n};\n\nTechTags.propTypes = {\n  labels: PropTypes.arrayOf(Object),\n  posts: PropTypes.arrayOf(Object),\n};\n\nTechTags.defaultProps = {\n  labels: [],\n  posts: [],\n};\n\nexport default TechTags;\n","import styled from 'styled-components';\n\nconst SiderbarMain = styled.div`\n  width: 100%;\n`;\n\nconst PageLinks = styled.div`\n  margin-top: 3rem;\n  padding-top: 4rem;\n  font-family: Raleway;\n`;\n\nexport default {\n  SiderbarMain,\n  PageLinks,\n};\n","import React from 'react';\nimport { StaticQuery, graphql, Link } from 'gatsby';\n\nimport Bio from './Bio';\n\nimport SocialLinks from './SocialLinks';\nimport TechTags from './TechTags';\n\nimport Styled from './SidebarStyled';\n\nconst Sidebar = () => (\n  <StaticQuery\n    query={graphql`\n                query SiteBioQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            tagline\n                            author\n                            contacts {\n                                linkedin\n                                github\n                                stackoverflow\n                                freecodecamp\n                                twitter\n                            }\n                            labels {\n                                tag\n                                tech\n                                name \n                                size \n                                color\n                                img\n                            }\n                        }\n                    }\n                    allMarkdownRemark(\n                        limit: 10\n                        sort: { fields: [frontmatter___date], order: DESC }\n                        filter: { frontmatter: { published: { eq: true } } }\n                    ) {\n                        edges {\n                            node {\n                                frontmatter {\n                                    tags\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n    render={({ site: { siteMetadata }, allMarkdownRemark }) => (\n      <>\n        <Styled.SiderbarMain className=\"border-right\">\n          <Bio author={siteMetadata.author} tagline={siteMetadata.tagline} />\n          <SocialLinks contacts={siteMetadata.contacts} />\n          <Styled.PageLinks>\n            <Link to=\"/\"><span className=\"text-dark d-block py-1\">Blog Home</span></Link>\n            <Link to=\"/about\"><span className=\"text-dark d-block py-1\">About</span></Link>\n            <Link to=\"/archive\"><span className=\"text-dark d-block py-1\">Archive</span></Link>\n          </Styled.PageLinks>\n          <div className=\"tech-tags mt-4\">\n            <TechTags labels={siteMetadata.labels} posts={allMarkdownRemark.edges} />\n          </div>\n        </Styled.SiderbarMain>\n      </>\n    )}\n  />\n);\n\nexport default Sidebar;\n"],"sourceRoot":""}