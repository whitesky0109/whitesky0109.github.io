{"componentChunkName":"component---src-pages-archive-jsx","path":"/archive/","result":{"data":{"site":{"siteMetadata":{"title":"개발자 성장기","author":"Gunwoo cho","labels":[{"tag":"react","tech":"React","name":"M12 9.861A2.139 2.139 0 1 0 12 14.139 2.139 2.139 0 1 0 12 9.861zM6.008 16.255l-.472-.12C2.018 15.246 0 13.737 0 11.996s2.018-3.25 5.536-4.139l.472-.119.133.468a23.53 23.53 0 0 0 1.363 3.578l.101.213-.101.213a23.307 23.307 0 0 0-1.363 3.578l-.133.467zM5.317 8.95c-2.674.751-4.315 1.9-4.315 3.046 0 1.145 1.641 2.294 4.315 3.046a24.95 24.95 0 0 1 1.182-3.046A24.752 24.752 0 0 1 5.317 8.95zM17.992 16.255l-.133-.469a23.357 23.357 0 0 0-1.364-3.577l-.101-.213.101-.213a23.42 23.42 0 0 0 1.364-3.578l.133-.468.473.119c3.517.889 5.535 2.398 5.535 4.14s-2.018 3.25-5.535 4.139l-.473.12zm-.491-4.259c.48 1.039.877 2.06 1.182 3.046 2.675-.752 4.315-1.901 4.315-3.046 0-1.146-1.641-2.294-4.315-3.046a24.788 24.788 0 0 1-1.182 3.046zM5.31 8.945l-.133-.467C4.188 4.992 4.488 2.494 6 1.622c1.483-.856 3.864.155 6.359 2.716l.34.349-.34.349a23.552 23.552 0 0 0-2.422 2.967l-.135.193-.235.02a23.657 23.657 0 0 0-3.785.61l-.472.119zm1.896-6.63c-.268 0-.505.058-.705.173-.994.573-1.17 2.565-.485 5.253a25.122 25.122 0 0 1 3.233-.501 24.847 24.847 0 0 1 2.052-2.544c-1.56-1.519-3.037-2.381-4.095-2.381zM16.795 22.677c-.001 0-.001 0 0 0-1.425 0-3.255-1.073-5.154-3.023l-.34-.349.34-.349a23.53 23.53 0 0 0 2.421-2.968l.135-.193.234-.02a23.63 23.63 0 0 0 3.787-.609l.472-.119.134.468c.987 3.484.688 5.983-.824 6.854a2.38 2.38 0 0 1-1.205.308zm-4.096-3.381c1.56 1.519 3.037 2.381 4.095 2.381h.001c.267 0 .505-.058.704-.173.994-.573 1.171-2.566.485-5.254a25.02 25.02 0 0 1-3.234.501 24.674 24.674 0 0 1-2.051 2.545zM18.69 8.945l-.472-.119a23.479 23.479 0 0 0-3.787-.61l-.234-.02-.135-.193a23.414 23.414 0 0 0-2.421-2.967l-.34-.349.34-.349C14.135 1.778 16.515.767 18 1.622c1.512.872 1.812 3.37.824 6.855l-.134.468zM14.75 7.24c1.142.104 2.227.273 3.234.501.686-2.688.509-4.68-.485-5.253-.988-.571-2.845.304-4.8 2.208A24.849 24.849 0 0 1 14.75 7.24zM7.206 22.677A2.38 2.38 0 0 1 6 22.369c-1.512-.871-1.812-3.369-.823-6.854l.132-.468.472.119c1.155.291 2.429.496 3.785.609l.235.02.134.193a23.596 23.596 0 0 0 2.422 2.968l.34.349-.34.349c-1.898 1.95-3.728 3.023-5.151 3.023zm-1.19-6.427c-.686 2.688-.509 4.681.485 5.254.987.563 2.843-.305 4.8-2.208a24.998 24.998 0 0 1-2.052-2.545 24.976 24.976 0 0 1-3.233-.501zM12 16.878c-.823 0-1.669-.036-2.516-.106l-.235-.02-.135-.193a30.388 30.388 0 0 1-1.35-2.122 30.354 30.354 0 0 1-1.166-2.228l-.1-.213.1-.213a30.3 30.3 0 0 1 1.166-2.228c.414-.716.869-1.43 1.35-2.122l.135-.193.235-.02a29.785 29.785 0 0 1 5.033 0l.234.02.134.193a30.006 30.006 0 0 1 2.517 4.35l.101.213-.101.213a29.6 29.6 0 0 1-2.517 4.35l-.134.193-.234.02c-.847.07-1.694.106-2.517.106zm-2.197-1.084c1.48.111 2.914.111 4.395 0a29.006 29.006 0 0 0 2.196-3.798 28.585 28.585 0 0 0-2.197-3.798 29.031 29.031 0 0 0-4.394 0 28.477 28.477 0 0 0-2.197 3.798 29.114 29.114 0 0 0 2.197 3.798z","size":20,"color":"deepskyblue"},{"tag":"nodejs","tech":"Node.js","name":"M11.177 25.3a1.94 1.94 0 0 1-.969-.259l-3.086-1.826c-.46-.257-.235-.349-.083-.402.614-.213.739-.262 1.394-.635.069-.038.159-.024.231.018l2.37 1.407a.304.304 0 0 0 .287 0l9.241-5.333a.292.292 0 0 0 .141-.25V7.355a.3.3 0 0 0-.143-.255l-9.237-5.329a.29.29 0 0 0-.285 0L1.803 7.102a.296.296 0 0 0-.146.253v10.666c0 .102.056.198.145.247l2.532 1.462c1.374.687 2.215-.122 2.215-.935V8.265c0-.149.12-.266.269-.266H7.99c.146 0 .267.117.267.266v10.53c0 1.833-.998 2.885-2.736 2.885-.534 0-.955 0-2.129-.579L.969 19.706A1.953 1.953 0 0 1 0 18.02V7.355c0-.693.371-1.339.969-1.684l9.242-5.34a2.023 2.023 0 0 1 1.942 0l9.241 5.34c.599.346.971.992.971 1.684V18.02c0 .693-.372 1.337-.971 1.686l-9.241 5.335a1.942 1.942 0 0 1-.973.259zm2.855-7.348c-4.045 0-4.892-1.857-4.892-3.414 0-.148.118-.266.266-.266h1.195c.133 0 .245.096.265.226.18 1.216.717 1.831 3.164 1.831 1.946 0 2.775-.441 2.775-1.473 0-.596-.234-1.037-3.26-1.334-2.528-.25-4.093-.809-4.093-2.831 0-1.865 1.572-2.977 4.207-2.977 2.961 0 4.425 1.027 4.611 3.233a.27.27 0 0 1-.267.291h-1.2a.266.266 0 0 1-.259-.209c-.288-1.28-.988-1.689-2.886-1.689-2.126 0-2.373.74-2.373 1.295 0 .673.292.869 3.161 1.248 2.84.375 4.19.907 4.19 2.902 0 2.014-1.678 3.167-4.606 3.167z","size":20,"color":"lightgreen"},{"tag":"git","tech":"Git","name":"M23.546 10.93L13.067.452c-.604-.603-1.582-.603-2.188 0L8.708 2.627l2.76 2.76c.645-.215 1.379-.07 1.889.441.516.515.658 1.258.438 1.9l2.658 2.66c.645-.223 1.387-.078 1.9.435.721.72.721 1.884 0 2.604-.719.719-1.881.719-2.6 0-.539-.541-.674-1.337-.404-1.996L12.86 8.955v6.525c.176.086.342.203.488.348.713.721.713 1.883 0 2.6-.719.721-1.889.721-2.609 0-.719-.719-.719-1.879 0-2.598.182-.18.387-.316.605-.406V8.835c-.217-.091-.424-.222-.6-.401-.545-.545-.676-1.342-.396-2.009L7.636 3.7.45 10.881c-.6.605-.6 1.584 0 2.189l10.48 10.477c.604.604 1.582.604 2.186 0l10.43-10.43c.605-.603.605-1.582 0-2.187","size":20,"color":"white"},{"tag":"javascript","tech":"JavaScript","name":"M0 0h24v24H0V0zm22.034 18.276c-.175-1.095-.888-2.015-3.003-2.873-.736-.345-1.554-.585-1.797-1.14-.091-.33-.105-.51-.046-.705.15-.646.915-.84 1.515-.66.39.12.75.42.976.9 1.034-.676 1.034-.676 1.755-1.125-.27-.42-.404-.601-.586-.78-.63-.705-1.469-1.065-2.834-1.034l-.705.089c-.676.165-1.32.525-1.71 1.005-1.14 1.291-.811 3.541.569 4.471 1.365 1.02 3.361 1.244 3.616 2.205.24 1.17-.87 1.545-1.966 1.41-.811-.18-1.26-.586-1.755-1.336l-1.83 1.051c.21.48.45.689.81 1.109 1.74 1.756 6.09 1.666 6.871-1.004.029-.09.24-.705.074-1.65l.046.067zm-8.983-7.245h-2.248c0 1.938-.009 3.864-.009 5.805 0 1.232.063 2.363-.138 2.711-.33.689-1.18.601-1.566.48-.396-.196-.597-.466-.83-.855-.063-.105-.11-.196-.127-.196l-1.825 1.125c.305.63.75 1.172 1.324 1.517.855.51 2.004.675 3.207.405.783-.226 1.458-.691 1.811-1.411.51-.93.402-2.07.397-3.346.012-2.054 0-4.109 0-6.179l.004-.056z","size":20,"color":"yellow"},{"tag":"css","tech":"CSS","name":"M1.5 0h21l-1.91 21.563L11.977 24l-8.565-2.438L1.5 0zm17.09 4.413L5.41 4.41l.213 2.622 10.125.002-.255 2.716h-6.64l.24 2.573h6.182l-.366 3.523-2.91.804-2.956-.81-.188-2.11h-2.61l.29 3.855L12 19.288l5.373-1.53L18.59 4.414z","size":20,"color":"teal"},{"tag":"python","tech":"Python","name":"M14.31.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13V8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.83l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.23l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05L0 11.97l.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.24-.01h.16l.06.01h8.16v-.83H6.24l-.01-2.75-.02-.37.05-.34.11-.31.17-.28.25-.26.31-.23.38-.2.44-.18.51-.15.58-.12.64-.1.71-.06.77-.04.84-.02 1.27.05 1.07.13zm-6.3 1.98l-.23.33-.08.41.08.41.23.34.33.22.41.09.41-.09.33-.22.23-.34.08-.41-.08-.41-.23-.33-.33-.22-.41-.09-.41.09-.33.22zM21.1 6.11l.28.06.32.12.35.18.36.27.36.35.35.47.32.59.28.73.21.88.14 1.04.05 1.23-.06 1.23-.16 1.04-.24.86-.32.71-.36.57-.4.45-.42.33-.42.24-.4.16-.36.09-.32.05-.24.02-.16-.01h-8.22v.82h5.84l.01 2.76.02.36-.05.34-.11.31-.17.29-.25.25-.31.24-.38.2-.44.17-.51.15-.58.13-.64.09-.71.07-.77.04-.84.01-1.27-.04-1.07-.14-.9-.2-.73-.25-.59-.3-.45-.33-.34-.34-.25-.34-.16-.33-.1-.3-.04-.25-.02-.2.01-.13v-5.34l.05-.64.13-.54.21-.46.26-.38.3-.32.33-.24.35-.2.35-.14.33-.1.3-.06.26-.04.21-.02.13-.01h5.84l.69-.05.59-.14.5-.21.41-.28.33-.32.27-.35.2-.36.15-.36.1-.35.07-.32.04-.28.02-.21V6.07h2.09l.14.01.21.03zm-6.47 14.25l-.23.33-.08.41.08.41.23.33.33.23.41.08.41-.08.33-.23.23-.33.08-.41-.08-.41-.23-.33-.33-.23-.41-.08-.41.08-.33.23z","size":20,"color":"deepskyblue"},{"tag":"ruby","tech":"Ruby","name":"M20.156.083c3.033.525 3.893 2.598 3.829 4.77L24 4.822 22.635 22.71 4.89 23.926h.016C3.433 23.864.15 23.729 0 19.139l1.645-3 2.819 6.586.503 1.172 2.805-9.144-.03.007.016-.03 9.255 2.956-1.396-5.431-.99-3.9 8.82-.569-.615-.51L16.5 2.114 20.159.073l-.003.01zM0 19.089v.026-.029.003zM5.13 5.073c3.561-3.533 8.157-5.621 9.922-3.84 1.762 1.777-.105 6.105-3.673 9.636-3.563 3.532-8.103 5.734-9.864 3.957-1.766-1.777.045-6.217 3.612-9.75l.003-.003z","size":20,"color":"crimson"},{"tag":"java","tech":"Java","name":"M8.851 18.56s-.917.534.653.714c1.902.218 2.874.187 4.969-.211 0 0 .552.346 1.321.646-4.699 2.013-10.633-.118-6.943-1.149M8.276 15.933s-1.028.761.542.924c2.032.209 3.636.227 6.413-.308 0 0 .384.389.987.602-5.679 1.661-12.007.13-7.942-1.218M13.116 11.475c1.158 1.333-.304 2.533-.304 2.533s2.939-1.518 1.589-3.418c-1.261-1.772-2.228-2.652 3.007-5.688 0-.001-8.216 2.051-4.292 6.573M19.33 20.504s.679.559-.747.991c-2.712.822-11.288 1.069-13.669.033-.856-.373.75-.89 1.254-.998.527-.114.828-.093.828-.093-.953-.671-6.156 1.317-2.643 1.887 9.58 1.553 17.462-.7 14.977-1.82M9.292 13.21s-4.362 1.036-1.544 1.412c1.189.159 3.561.123 5.77-.062 1.806-.152 3.618-.477 3.618-.477s-.637.272-1.098.587c-4.429 1.165-12.986.623-10.522-.568 2.082-1.006 3.776-.892 3.776-.892M17.116 17.584c4.503-2.34 2.421-4.589.968-4.285-.355.074-.515.138-.515.138s.132-.207.385-.297c2.875-1.011 5.086 2.981-.928 4.562 0-.001.07-.062.09-.118M14.401 0s2.494 2.494-2.365 6.33c-3.896 3.077-.888 4.832-.001 6.836-2.274-2.053-3.943-3.858-2.824-5.539 1.644-2.469 6.197-3.665 5.19-7.627M9.734 23.924c4.322.277 10.959-.153 11.116-2.198 0 0-.302.775-3.572 1.391-3.688.694-8.239.613-10.937.168 0-.001.553.457 3.393.639","size":20,"color":"wheat"},{"tag":"angular","tech":"Angular","name":"M9.93 12.645h4.134L11.996 7.74M11.996.009L.686 3.988l1.725 14.76 9.585 5.243 9.588-5.238L23.308 3.99 11.996.01zm7.058 18.297h-2.636l-1.42-3.501H8.995l-1.42 3.501H4.937l7.06-15.648 7.057 15.648z","size":20,"color":"red"},{"tag":"html","tech":"HTML","name":"M1.5 0h21l-1.91 21.563L11.977 24l-8.564-2.438L1.5 0zm7.031 9.75l-.232-2.718 10.059.003.23-2.622L5.412 4.41l.698 8.01h9.126l-.326 3.426-2.91.804-2.955-.81-.188-2.11H6.248l.33 4.171L12 19.351l5.379-1.443.744-8.157H8.531z","size":20,"color":"darkorange"},{"tag":"php","tech":"php","name":"M7.01 10.207h-.944l-.515 2.648h.838c.556 0 .97-.105 1.242-.314.272-.21.455-.559.55-1.049.092-.47.05-.802-.124-.995-.175-.193-.523-.29-1.047-.29zM12 5.688C5.373 5.688 0 8.514 0 12s5.373 6.313 12 6.313S24 15.486 24 12c0-3.486-5.373-6.312-12-6.312zm-3.26 7.451c-.261.25-.575.438-.917.551-.336.108-.765.164-1.285.164H5.357l-.327 1.681H3.652l1.23-6.326h2.65c.797 0 1.378.209 1.744.628.366.418.476 1.002.33 1.752a2.836 2.836 0 0 1-.305.847c-.143.255-.33.49-.561.703zm4.024.715l.543-2.799c.063-.318.039-.536-.068-.651-.107-.116-.336-.174-.687-.174H11.46l-.704 3.625H9.388l1.23-6.327h1.367l-.327 1.682h1.218c.767 0 1.295.134 1.586.401s.378.7.263 1.299l-.572 2.944h-1.389zm7.597-2.265a2.782 2.782 0 0 1-.305.847c-.143.255-.33.49-.561.703a2.44 2.44 0 0 1-.917.551c-.336.108-.765.164-1.286.164h-1.18l-.327 1.682h-1.378l1.23-6.326h2.649c.797 0 1.378.209 1.744.628.366.417.477 1.001.331 1.751zM17.766 10.207h-.943l-.516 2.648h.838c.557 0 .971-.105 1.242-.314.272-.21.455-.559.551-1.049.092-.47.049-.802-.125-.995s-.524-.29-1.047-.29z","size":20,"color":"violet"},{"tag":"mongodb","tech":"MongoDB","name":"M17.18 9.518c-1.263-5.56-4.242-7.387-4.562-8.086C12.266.939 11.885 0 11.885 0c-.002.019-.004.031-.005.049v.013h-.001c-.002.015-.003.025-.004.039v.015h-.002c0 .01-.002.018-.002.026v.026h-.003c-.001.008-.001.018-.003.025v.021h-.002c0 .007 0 .015-.002.021v.02h-.002c0 .01-.001.022-.002.032v.002c-.003.017-.006.034-.009.05v.008h-.002c-.001.004-.003.008-.003.012v.017h-.003v.022h-.005v.018h-.005v.021h-.004v.019h-.004v.017h-.006v.014h-.004v.018h-.004v.014h-.005v.013H11.8v.015h-.004c-.001.001-.001.003-.001.004v.01h-.003c-.001.002-.001.004-.001.006v.006h-.002c-.001.003-.002.008-.002.01-.003.007-.007.014-.01.021v.002c-.002.002-.004.005-.005.007v.008h-.004v.008h-.005v.008h-.003v.01h-.006v.014h-.004v.004h-.004v.008h-.004v.011h-.004v.008h-.006v.011h-.004v.008h-.005v.008h-.003v.01h-.005v.008h-.004v.006h-.004v.008h-.006V.76h-.004v.006h-.005v.008h-.004v.011h-.005v.004h-.003v.008h-.006v.004h-.004v.01h-.004v.004h-.004v.008h-.005v.006h-.003l-.002.004v.004h-.002c-.001.002-.002.002-.002.004v.001h-.001c-.001.003-.002.005-.004.007v.003h-.001c-.005.006-.008.012-.012.018v.001c-.002.002-.007.006-.009.01v.002h-.001c-.001.001-.003.002-.003.003v.003h-.002l-.003.003v.001h-.001c0 .001-.002.002-.003.004v.004h-.003l-.002.002v.002h-.002c0 .002-.002.002-.002.003v.003h-.004c0 .001-.001.002-.002.003V.92h-.003v.004h-.004V.93h-.004v.008h-.005V.93h-.005v.004h-.004V.94h-.005v.008h-.005v.004h-.004v.006h-.004v.004h-.004V.97h-.006v.004h-.004V.98h-.005v.004h-.004v.005h-.005v.01h-.002v.004h-.006v.005h-.004v.002h-.004v.004h-.005v.01h-.004v.004h-.005v.004h-.004v.006h-.005v.004h-.005v.004h-.004v.004h-.004v.01h-.004v.005h-.006v.004h-.004v.004h-.005v.006h-.004v.004h-.005v.007h-.004v.004h-.006V1.1h-.002v.004h-.004v.004h-.005v.004h-.004v.006h-.005v.004h-.003c-.001.001-.001.002-.001.002v.002h-.002l-.004.004s-.002.002-.004.003v.006h-.004v.005h-.004v.004h-.004v.004h-.003l-.003.003v.003h-.002l-.002.002v.003h-.002c-.005.006-.007.01-.014.016-.002.002-.008.007-.012.01-.012.008-.027.021-.039.032-.008.005-.016.012-.022.017v.001h-.001c-.016.013-.031.025-.049.039v.001c-.024.02-.047.039-.074.062V1.34h-.002c-.057.047-.117.1-.186.159V1.5h-.001c-.169.148-.37.338-.595.568l-.015.015-.004.004C9 3.494 6.857 6.426 6.631 11.164c-.02.392-.016.773.006 1.144v.009c.109 1.867.695 3.461 1.428 4.756v.001c.292.516.607.985.926 1.405v.001c1.102 1.455 2.227 2.317 2.514 2.526.441 1.023.4 2.779.4 2.779l.644.215s-.131-1.701.053-2.522c.057-.257.192-.476.349-.662.106-.075.42-.301.797-.645.018-.019.028-.036.044-.054 1.521-1.418 4.362-4.91 3.388-10.599z","size":20,"color":"green"},{"tag":"vscode","tech":"VS Code","name":"M23.15 2.587L18.21.21a1.494 1.494 0 0 0-1.705.29l-9.46 8.63-4.12-3.128a.999.999 0 0 0-1.276.057L.327 7.261A1 1 0 0 0 .326 8.74L3.899 12 .326 15.26a1 1 0 0 0 .001 1.479L1.65 17.94a.999.999 0 0 0 1.276.057l4.12-3.128 9.46 8.63a1.492 1.492 0 0 0 1.704.29l4.942-2.377A1.5 1.5 0 0 0 24 20.06V3.939a1.5 1.5 0 0 0-.85-1.352zm-5.146 14.861L10.826 12l7.178-5.448v10.896z","size":20,"color":"deepskyblue"},{"tag":"graphql","tech":"GraphQL","name":"M14.051 2.751l4.935 2.85c.816-.859 2.173-.893 3.032-.077.148.14.274.301.377.477.589 1.028.232 2.339-.796 2.928-.174.1-.361.175-.558.223v5.699c1.146.273 1.854 1.423 1.58 2.569-.048.204-.127.4-.232.581-.592 1.023-1.901 1.374-2.927.782-.196-.113-.375-.259-.526-.429l-4.905 2.832c.372 1.124-.238 2.335-1.361 2.706-.217.071-.442.108-.67.108-1.181.001-2.139-.955-2.14-2.136 0-.205.029-.41.088-.609l-4.936-2.847c-.816.854-2.171.887-3.026.07-.854-.816-.886-2.171-.07-3.026.283-.297.646-.506 1.044-.603l.001-5.699c-1.15-.276-1.858-1.433-1.581-2.584.047-.198.123-.389.224-.566.592-1.024 1.902-1.374 2.927-.782.177.101.339.228.48.377l4.938-2.85C9.613 1.612 10.26.423 11.39.088 11.587.029 11.794 0 12 0c1.181-.001 2.139.954 2.14 2.134.001.209-.03.418-.089.617zm-.515.877c-.019.021-.037.039-.058.058l6.461 11.19c.026-.009.056-.016.082-.023V9.146c-1.145-.283-1.842-1.442-1.558-2.588.006-.024.012-.049.019-.072l-4.946-2.858zm-3.015.059l-.06-.06-4.946 2.852c.327 1.135-.327 2.318-1.461 2.645-.026.008-.051.014-.076.021v5.708l.084.023 6.461-11.19-.002.001zm2.076.507c-.39.112-.803.112-1.192 0l-6.46 11.189c.294.283.502.645.6 1.041h12.911c.097-.398.307-.761.603-1.044L12.597 4.194zm.986 16.227l4.913-2.838c-.015-.047-.027-.094-.038-.142H5.542l-.021.083 4.939 2.852c.388-.404.934-.653 1.54-.653.627 0 1.19.269 1.583.698z","size":20,"color":"hotpink"},{"tag":"gatsby","tech":"Gatsby","name":"M12.001.007C5.326.007.007 5.326.007 12S5.326 23.995 12 23.995s11.994-5.319 11.994-11.994S18.676.007 12.001.007zM2.614 12.105l9.283 9.283c-5.111 0-9.283-4.172-9.283-9.283zm11.473 9.074L2.823 9.915C3.76 5.743 7.516 2.614 12 2.614a9.476 9.476 0 0 1 7.614 3.86L18.259 7.62a7.657 7.657 0 0 0-6.362-3.337A7.555 7.555 0 0 0 4.7 9.393l9.804 9.805c2.4-.835 4.276-2.92 4.798-5.424h-4.068v-1.773h6.154c0 4.485-3.129 8.24-7.301 9.178z","size":20,"color":"rebeccapurple"},{"tag":"diary","tech":"Diary","name":null,"size":20,"color":null}]}},"allMarkdownRemark":{"totalCount":10,"edges":[{"node":{"excerpt":"현재 github에 코드를 업로드 하고 있는 상태에서 간편하게 git을 통해 github에 코드가 반영되면 자동으로 githubUserId.github.io가 반영되길 원했다. 그래서 자동 배포하는 방법을 찾아보았고, 자동 배포에서 내가 원하는 기능은 아래와 같다. github와 유기적 연동 github에서 자동 배포 현황 기본 UI…","html":"<p>현재 github에 코드를 업로드 하고 있는 상태에서</p>\n<p>간편하게 git을 통해 github에 코드가 반영되면 자동으로 [githubUserId].github.io가 반영되길 원했다.</p>\n<p>그래서 자동 배포하는 방법을 찾아보았고, 자동 배포에서 내가 원하는 기능은 아래와 같다.</p>\n<ol>\n<li>github와 유기적 연동</li>\n<li>github에서 자동 배포 현황 기본 UI 제공</li>\n<li>자동 배포 사이트 및 현황 UI 제공</li>\n<li>git push와 동시에 배포 빌드를 원격(외부 시스템)에서 동작</li>\n<li>장애 처리에 대한 다양한 레퍼런스(커뮤니티) 제공</li>\n</ol>\n<p>그리고 내 코드를 보니 travis 설정 파일(.travis.yml)이 적용되어 이를 활용하여 자동 배포를 적용기를 작성하고자 한다.</p>\n<hr>\n<h2><a href=\"https://owin2828.github.io/devlog/2020/01/09/cicd-1.html\">Travis?</a></h2>\n<p>CI(Continuous Integration)/CD(Continuous Delivery) 도구 중 하나</p>\n<hr>\n<h2>사전 준비</h2>\n<p>(자세한 내용은 <a href=\"https://anpigon.github.io/blog/kr/@anpigon/travisci-gatsby--1545840561400/\">해당 링크</a>를 참조 바랍니다.)</p>\n<h3>github token 생성</h3>\n<p>내 github 수정 권한을 Travis에 제공해야하는데, 이를 얻기 위해 github token 생성이 필요하다.</p>\n<p>아래의 링크에서 github token을 생성해야 한다.</p>\n<p><a href=\"https://github.com/settings/tokens\">https://github.com/settings/tokens</a></p>\n<p><img src=\"/snapshot/2021/0323/createGithubTokenGuide1.PNG\">\n(repo와 관련한 설정은 허용하도록 설정하자.)</p>\n<p>그리고 저장하면 아래의 그림과 같이토 토큰 값을 볼 수 있다.\n생성된 토큰 값은 어딘가 저장하자.(이후에 사용해야 하는 값)\n<img src=\"/snapshot/2021/0323/createGithubTokenGuide2.PNG\">\n(Token 생성 후 토큰 값을 볼 수 있는데, 페이지 새로 고침하면 다시는 볼 수 없다.\n다만 토큰 값을 재생성은 가능하다.)</p>\n<hr>\n<h2>Travis 연동 환경 설정</h2>\n<p><a href=\"https://travis-ci.com/\">travis</a> 페이지에 접근하여 github 계정으로 로그인하여 Travis github 계정을 만들자.</p>\n<p><a href=\"https://travis-ci.com/account/repositories\">repositories</a>에 접근하여 Github Integration 활성화 하자.</p>\n<h4>Repositories 활성화</h4>\n<p><img src=\"/snapshot/2021/0323/activeRepositoryTravisGuide1.PNG\">\n(활성화 버튼을 클릭 하면 Github 페이지로 리다이렉트가 됩니다.)</p>\n<p>Travis에서 접근가능한 Repository를 지정하자.\n<img src=\"/snapshot/2021/0323/activeRepositoryTravisGuide2.PNG\">\n(나는 Travis에서는 github.io만 사용할 예정이라 특정 Repository를 지정했다.)</p>\n<h4>Repository 등록 확인</h4>\n<p><a href=\"https://travis-ci.com/dashboard\">dashboard</a>에 접근하면 활성화된 Repository 목록을 확인 할 수 있다.</p>\n<p><img src=\"/snapshot/2021/0323/activeRepositoryTravisGuide3.PNG\"></p>\n<h4>Repository 설정으로 GITHUB_TOKEN 추가</h4>\n<p>Travis를 통해 Github에 배포(Commit)를 위해서는 Git 접근 권한을 설정해줘야 한다.</p>\n<ol>\n<li>특정 Repository의 설정 페이지에 접근하자.\n<img src=\"/snapshot/2021/0323/settingRepositoryInTravisGuide1.PNG\"></li>\n<li>설정 하단에 Environment Variables에 앞에서 받아온 Github token값을 등록하자.\n<img src=\"/snapshot/2021/0323/settingRepositoryInTravisGuide3.PNG\">\n(나는 배포 코드는 master에 있기에 master 브랜치도 지정했다.)</li>\n</ol>\n<hr>\n<h3>Travis 빌드 환경 설정</h3>\n<p>지금까지 Github와 Travis간의 연동 설정을 했다면 지금부터는 Travis에서 실행 될 빌드동작과 환경을 설정한다.</p>\n<p>git 코드 최상단 디렉토리에 .travis.yml 파일을 생성 후 아래와 같이 수정하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># .travis.yml</span>\n<span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> node_js\n\n<span class=\"token key atrule\">node_js</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token string\">\"lts/*\"</span>\n\n<span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">yarn</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">directories</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> node_modules\n    <span class=\"token punctuation\">-</span> public\n    <span class=\"token punctuation\">-</span> .cache\n\n<span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span> pages <span class=\"token comment\"># Use Github pages deploy process</span>\n  <span class=\"token key atrule\">skip-cleanup</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">local_dir</span><span class=\"token punctuation\">:</span> public\n  <span class=\"token key atrule\">github_token</span><span class=\"token punctuation\">:</span> $GITHUB_TOKEN <span class=\"token comment\"># Github security/auth token</span>\n  <span class=\"token key atrule\">keep_history</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">target_branch</span><span class=\"token punctuation\">:</span> public\n  <span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master\n\n<span class=\"token comment\"># before_script:</span>\n<span class=\"token comment\">#   - \"npm i -g gatsby-cli\"</span>\n<span class=\"token comment\">#   - \"yarn\"</span>\n\n<span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> gatsby build</code></pre></div>\n<p>그리고 저장된 내용을 github에 push하면 바로 Travis가 동작할 것이다.</p>\n<hr>\n<h2>빌드 결과</h2>\n<p>git의 빌드 결과는 build history에서 볼 수 있다.\n<img src=\"/snapshot/2021/0323/buildTravisGuide1.PNG\"></p>\n<hr>\n<h2>도움 받은 사이트</h2>\n<ul>\n<li><a href=\"https://anpigon.github.io/blog/kr/@anpigon/travisci-gatsby--1545840561400/\">Travis-CI를 이용한 Gatsby 블로그 자동 배포하기</a></li>\n<li><a href=\"https://snyk.io/blog/deploying-a-gatsby-site-to-github-pages-from-travis-ci/\">Deploying a Gatsby site to GitHub Pages from Travis CI</a></li>\n<li><a href=\"https://slashgear.github.io/how-to-deploy-on-github-pages-with-travis-ci/\">How to deploy on Github Pages with Travis CI?</a></li>\n</ul>\n<hr>\n<h2>changed</h2>\n<ul>\n<li><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/4280fad341c83bbbd3e0a4bb5903e5c91dcfc530\">[master][CI] change config</a></li>\n<li><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/21b99bc5b3a0f0c5bf946399f1f7448bdf3f9335\">[master][CI] fixed build config</a></li>\n<li><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/f869f2d2e45203e32b29d267f9858862016ad7cd\">[master][travis] disabled before_script</a></li>\n<li><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/e2dbc5018acc8c276f39fe466ade9283f28cf026\">[master] update travis config</a></li>\n<li><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/730f64ccc3dc00c2f66f2a95bcdfd5efc9d70f7e\">[master][post][incomplete] write testing travis</a></li>\n<li><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/b2462231d8abf4712b66a5c9777bf6a4691b420c\">[master] fixed gh-pages config</a></li>\n<li><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/5109d85be0c90b1488be30257ab5ee2506a5c072\">[masater] update travis config &#x26; deploy config</a></li>\n<li><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/9a0c3835b23aebcaf08ffdbaad7685b829e29d77\">[master] update travis config</a></li>\n<li><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/4bbd85915cbe78cebe53de5e71b8a2edf9e46b3b\">[master] edit travis settings</a></li>\n<li><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/1e9455871640fc57dc21595e421a4b22684a2f55\">test travis</a></li>\n</ul>","id":"4df4bd78-499a-597e-9163-e729cb06e7d5","frontmatter":{"title":"Travis를 활용하여 github.io에 자동 배포 적용기","date":"March 23, 2021","tags":["git"]},"fields":{"slug":"/whitesky0109/2021/0323-apply-travis/"}}},{"node":{"excerpt":"해당 문서(.md)에 이미지를 가져와 보여주고 싶은데 방법을 몰랐다. 그래서 아래와 같은 방법으로 추가했다. static 디렉토리에 이미지 파일을 넣는다. static 디렉토리가 md 파일 입장에서 root(/)로 시작한다.\n(예를 들어 static/images/diary.svg 이면 -> /images/diary.svg…","html":"<p>해당 문서(.md)에 이미지를 가져와 보여주고 싶은데 방법을 몰랐다.</p>\n<p>그래서 <a href=\"https://www.gatsbyjs.com/docs/how-to/images-and-media/static-folder/\">아래와 같은 방법</a>으로 추가했다.</p>\n<ol>\n<li>static 디렉토리에 이미지 파일을 넣는다.</li>\n<li>static 디렉토리가 md 파일 입장에서 root(/)로 시작한다.\n(예를 들어 static/images/diary.svg 이면 -> /images/diary.svg)</li>\n<li>테스트 해보자.</li>\n</ol>\n<p><img src=\"/images/diary.svg\"></p>\n<p>(이렇게...)</p>\n<h2>궁금점</h2>\n<ol>\n<li>static 디렉토리를 변경 방법은?</li>\n<li>static 말고 가져오는 방법은?</li>\n<li>posts 디렉토리에 두고 가져오는 방법은?</li>\n</ol>\n<h2>도움 받은 사이트</h2>\n<ul>\n<li><a href=\"https://www.gatsbyjs.com/docs/how-to/images-and-media/static-folder/\">Using the Static Folder</a></li>\n</ul>","id":"bfb6c772-2b58-59ef-8cda-7a53ac460857","frontmatter":{"title":"Gatsby 배포된 문서에 이미지 표시 방법","date":"March 22, 2021","tags":["gatsby"]},"fields":{"slug":"/whitesky0109/2021/0322-how-to-read-static-files/"}}},{"node":{"excerpt":"사내에서 Styled-component로 CSS를 수정하다 보니\nCSS-in-JS가 익숙해서 해당 블로그에도 styled-component를 적용해볼려고 한다. 설치 설정 도움 받은 사이트 Styled Components changed commit","html":"<p>사내에서 <a href=\"https://www.daleseo.com/react-styled-components/\">Styled-component</a>로 CSS를 수정하다 보니\n<a href=\"https://velog.io/tags/CSS-in-JS\">CSS-in-JS</a>가 익숙해서 해당 블로그에도 styled-component를 적용해볼려고 한다.</p>\n<hr>\n<h2>설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span> D:\\dev\\blog> yarn add gatsby<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span>styled<span class=\"token operator\">-</span>components styled<span class=\"token operator\">-</span>components babel<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span>styled<span class=\"token operator\">-</span>components</code></pre></div>\n<hr>\n<h2>설정</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-plugin-styled-components</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2>도움 받은 사이트</h2>\n<ul>\n<li><a href=\"https://www.gatsbyjs.com/docs/how-to/styling/styled-components/\">Styled Components</a></li>\n</ul>\n<h2>changed</h2>\n<p><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/2840f7c7f434b1406e9c907d9f9aaf12fabb94e5\">commit</a></p>","id":"4be83e69-e12f-51f3-8584-9caff619843e","frontmatter":{"title":"Gatsby에 Styled-component 적용기","date":"March 20, 2021","tags":["nodejs","javascript","css"]},"fields":{"slug":"/whitesky0109/2021/0320-apply-styled-components/"}}},{"node":{"excerpt":"내 블로그에 추가하는 코드들의 ESLint를 적용하여 VSCode 코드 제안을 받아보자. airbnb 설치 ESLint 설정 적용했더니...? \n(헉....) 도움 받은 사이트 Using ESLint github blog 생성하기 (feat. gatsby) changed commit","html":"<p>내 블로그에 추가하는 코드들의 <a href=\"https://poiemaweb.com/eslint\">ESLint</a>를 적용하여 VSCode 코드 제안을 받아보자.</p>\n<hr>\n<h2>airbnb 설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span> D:\\dev\\blog> yarn add <span class=\"token operator\">-</span>D eslint eslint<span class=\"token operator\">-</span>config<span class=\"token operator\">-</span>airbnb eslint<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span>import eslint<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span>jsx<span class=\"token operator\">-</span>a11y eslint<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span>react</code></pre></div>\n<hr>\n<h2>ESLint 설정</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// .eslintrc.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  globals<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    __PATH_PREFIX__<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token string\">'airbnb'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>적용했더니...?</h2>\n<p><img src=\"/snapshot/lintError1.PNG\">\n(헉....)</p>\n<hr>\n<h2>도움 받은 사이트</h2>\n<ul>\n<li><a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/eslint/\">Using ESLint</a></li>\n<li><a href=\"https://velog.io/@hwang-eunji/create-github-blog-feat.-gatsby\">github blog 생성하기 (feat. gatsby)</a></li>\n</ul>\n<h2>changed</h2>\n<p><a href=\"https://github.com/whitesky0109/whitesky0109.github.io/commit/094d853b0d38d6f8cf23642d418479b232382f16\">commit</a></p>","id":"400eac72-f7a2-56c2-a765-e76e8ecf2942","frontmatter":{"title":"Gatsby에 ESLint 적용기","date":"March 19, 2021","tags":["nodejs","javascript","vscode"]},"fields":{"slug":"/whitesky0109/2021/0319-apply-eslint/"}}},{"node":{"excerpt":"gatsby를 이용하여 개인 사이트를 github.io에 업로드까지 과정을 설명해보려고 한다. Gatsby란? JAMstack(Javascript / API / Markup) SSG(Static Site Generator) 중 하나 개발 환경 구성 windows 10 git node.js 나 NVM v12.13.…","html":"<hr>\n<p>gatsby를 이용하여 개인 사이트를 github.io에 업로드까지 과정을 설명해보려고 한다.</p>\n<hr>\n<h1><a href=\"https://blog.outsider.ne.kr/1426\">Gatsby</a>란?</h1>\n<ul>\n<li><a href=\"https://pks2974.medium.com/jam-stack-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0-17dd5c34edf7\">JAMstack</a>(Javascript / API / Markup) SSG(Static Site Generator) 중 하나</li>\n</ul>\n<hr>\n<h1><a href=\"https://www.gatsbyjs.com/docs/tutorial/part-zero/\">개발 환경</a> 구성</h1>\n<ul>\n<li>windows 10</li>\n<li><a href=\"https://git-scm.com/download\">git</a></li>\n<li>\n<p><a href=\"https://nodejs.org/ko/\">node.js</a> 나 <a href=\"https://github.com/coreybutler/nvm-windows/releases/\">NVM</a></p>\n<ul>\n<li>v12.13.0 이상 사용을 권장 한다. (<a href=\"https://www.gatsbyjs.com/docs/upgrading-node-js/\">왜?</a>)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span> D:\\dev> gatsby new hello\n\nERROR\n\nGatsby requires Node<span class=\"token punctuation\">.</span>js 12<span class=\"token punctuation\">.</span>13<span class=\"token punctuation\">.</span>0 or higher <span class=\"token punctuation\">(</span>you have v10<span class=\"token punctuation\">.</span>23<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\nUpgrade Node to the latest stable release:\nhttps:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>gatsby<span class=\"token punctuation\">.</span>dev<span class=\"token operator\">/</span>upgrading<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>js</code></pre></div>\n</li>\n</ul>\n<hr>\n<h1>github.io에 내 저장소 만들기</h1>\n<p>호스팅할 곳을 정해야하는데,</p>\n<p>나는 {githubUserId}.github.io/ 라는 URL로 접근하면 바로 페이지를 볼 수 있는 환경을 원했다.</p>\n<p>그러기 위해선,\n내 github에서 내 계정으로 로그인 후 Repository를 생성을 해야하는데,\nRepository 이름을 어떻게 만드냐에 따라 root URL로 접근할 수 있었다.</p>\n<h3>Repository [name]</h3>\n<ul>\n<li>{githubUserId}.github.io/{name} 로 접근해야 페이지에 접근이 가능하다.\n<img src=\"/snapshot/newRepositoryGuide2.png\"></li>\n</ul>\n<h3>Repository [githubUserId].github.io</h3>\n<ul>\n<li>{githubUserId}.github.io/ 로 접근하면 페이지에 접근이 가능했다.\n<img src=\"/snapshot/newRepositoryGuide1.png\">\n(자세히 보면 친절하게 github에서 잘못 썻다고 경고하고 있다.)</li>\n<li>다만 이러는 경우 git source가 github.com/{githubUserId}/{githubUserId}.github.io가 되어 소스 URL이 길어지는건 조금 아쉬움이 남는다.</li>\n</ul>\n<hr>\n<h1><a href=\"https://www.gatsbyjs.com/starters/\">Gatsby staters</a></h1>\n<ul>\n<li>boilerplate 라이브러리 모음집</li>\n<li><a href=\"https://www.gatsbyjs.com/starters/willjw3/gatsby-starter-developer-diary/\">너로 정했다!</a></li>\n<li>깔끔하고 이뻐서 선택했다.</li>\n</ul>\n<hr>\n<h1>Gatsby 빌드하기</h1>\n<ul>\n<li>소스 가져오기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span> D:\\dev> gatsby new diary https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>willjw3<span class=\"token operator\">/</span>gatsby<span class=\"token operator\">-</span>starter<span class=\"token operator\">-</span>developer<span class=\"token operator\">-</span>diary</code></pre></div>\n<p>(window의 경우 아래와 같이 오류가 나온다)</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">gyp ERR<span class=\"token operator\">!</span> stack Error: Could not find any Python installation to use\ngyp ERR<span class=\"token operator\">!</span> stack     at PythonFinder<span class=\"token punctuation\">.</span>fail <span class=\"token punctuation\">(</span>C:\\nvm\\v14<span class=\"token punctuation\">.</span>16<span class=\"token punctuation\">.</span>0\\node_modules\\npm\\node_modules\\node<span class=\"token operator\">-</span>gyp\\lib\\<span class=\"token function\">find-python</span><span class=\"token punctuation\">.</span>js:307:47<span class=\"token punctuation\">)</span>\ngyp ERR<span class=\"token operator\">!</span> stack     at PythonFinder<span class=\"token punctuation\">.</span>runChecks <span class=\"token punctuation\">(</span>C:\\nvm\\v14<span class=\"token punctuation\">.</span>16<span class=\"token punctuation\">.</span>0\\node_modules\\npm\\node_modules\\node<span class=\"token operator\">-</span>gyp\\lib\\<span class=\"token function\">find-python</span><span class=\"token punctuation\">.</span>js:136:21<span class=\"token punctuation\">)</span>\ngyp ERR<span class=\"token operator\">!</span> stack     at PythonFinder<span class=\"token punctuation\">.</span>&lt;anonymous> <span class=\"token punctuation\">(</span>C:\\nvm\\v14<span class=\"token punctuation\">.</span>16<span class=\"token punctuation\">.</span>0\\node_modules\\npm\\node_modules\\node<span class=\"token operator\">-</span>gyp\\lib\\<span class=\"token function\">find-python</span><span class=\"token punctuation\">.</span>js:225:16<span class=\"token punctuation\">)</span>\ngyp ERR<span class=\"token operator\">!</span> stack     at PythonFinder<span class=\"token punctuation\">.</span>execFileCallback <span class=\"token punctuation\">(</span>C:\\nvm\\v14<span class=\"token punctuation\">.</span>16<span class=\"token punctuation\">.</span>0\\node_modules\\npm\\node_modules\\node<span class=\"token operator\">-</span>gyp\\lib\\<span class=\"token function\">find-python</span><span class=\"token punctuation\">.</span>js:271:16<span class=\"token punctuation\">)</span>\ngyp ERR<span class=\"token operator\">!</span> stack     at exithandler <span class=\"token punctuation\">(</span>child_process<span class=\"token punctuation\">.</span>js:315:5<span class=\"token punctuation\">)</span>\ngyp ERR<span class=\"token operator\">!</span> stack     at ChildProcess<span class=\"token punctuation\">.</span>errorhandler <span class=\"token punctuation\">(</span>child_process<span class=\"token punctuation\">.</span>js:327:5<span class=\"token punctuation\">)</span>\ngyp ERR<span class=\"token operator\">!</span> stack     at ChildProcess<span class=\"token punctuation\">.</span>emit <span class=\"token punctuation\">(</span>events<span class=\"token punctuation\">.</span>js:315:20<span class=\"token punctuation\">)</span>\ngyp ERR<span class=\"token operator\">!</span> stack     at <span class=\"token keyword\">Process</span><span class=\"token punctuation\">.</span>ChildProcess<span class=\"token punctuation\">.</span>_handle<span class=\"token punctuation\">.</span>onexit <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>child_process<span class=\"token punctuation\">.</span>js:275:12<span class=\"token punctuation\">)</span>\ngyp ERR<span class=\"token operator\">!</span> stack     at onErrorNT <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>child_process<span class=\"token punctuation\">.</span>js:465:16<span class=\"token punctuation\">)</span>\ngyp ERR<span class=\"token operator\">!</span> stack     at processTicksAndRejections <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span><span class=\"token keyword\">process</span><span class=\"token operator\">/</span>task_queues<span class=\"token punctuation\">.</span>js:80:21<span class=\"token punctuation\">)</span>\ngyp ERR<span class=\"token operator\">!</span> System Windows_NT 10<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>19042</code></pre></div>\n<p>그래서 오류 발생 후 디렉토리로 들어가서 다시 빌드하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span> D:\\dev> cd <span class=\"token punctuation\">.</span>\\diary\\\n<span class=\"token function\">PS</span> D:\\dev\\diary> yarn <span class=\"token comment\"># npm install -g yarn</span></code></pre></div>\n<h3>빌드</h3>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span> D:\\dev\\diary> gatsby build</code></pre></div>\n<hr>\n<h1>Gatsby 배포하기</h1>\n<ol>\n<li>github에 배포하기 위한 command를 추가하자</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span> D:\\dev\\diary> yarn add <span class=\"token operator\">-</span>D gh<span class=\"token operator\">-</span>pages</code></pre></div>\n<ol start=\"2\">\n<li>소스 배포 주소를 지정하자.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span> D:\\dev\\diary> git push <span class=\"token operator\">-</span>u origin master\n<span class=\"token function\">PS</span> D:\\dev\\diary> git remote add origin https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span><span class=\"token namespace\">[githubUserId]</span><span class=\"token operator\">/</span><span class=\"token namespace\">[githubUserId]</span><span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>git</code></pre></div>\n<ol start=\"3\">\n<li>package.json에 명령어 추가하자.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  ...\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    ...\n    <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby build &amp;&amp; gh-pages -d public -b master\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"3\">\n<li>배포 하자.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span> D:\\dev\\diary> yarn deploy</code></pre></div>\n<p>(이렇게 해서 현재 페이지를 보게 되었다.)</p>\n<hr>\n<h2>도움 받은 사이트</h2>\n<ul>\n<li><a href=\"https://blog.outsider.ne.kr/1426\">정적 사이트 생성기</a></li>\n<li><a href=\"https://www.gatsbyjs.com/docs/tutorial/part-zero/\">Set Up Your Development Environment</a></li>\n<li><a href=\"https://siisee111.medium.com/gatsby-js%EB%A1%9C-%EC%9B%B9%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0-1-11d5cf3336c6\">Gatsby.js로 블로그 만들기[1]</a></li>\n</ul>","id":"354e3465-e093-55ef-a68b-325ee194dfb0","frontmatter":{"title":"Gatsby로 Github.io 만들기","date":"March 18, 2021","tags":["gatsby","nodejs"]},"fields":{"slug":"/whitesky0109/2021/0318-hello-gatsby/"}}},{"node":{"excerpt":"Crossing Fingers... Looks like we've gotten the cms working, folks. Give it a try!","html":"<p><em>Crossing Fingers...</em></p>\n<p>Looks like we've gotten the cms working, folks. Give it a try!</p>","id":"9c5976b2-f004-5b42-af20-22c8a9a9f7cd","frontmatter":{"title":"Test Post After Netlify CMS Install","date":"January 05, 2020","tags":["graphql","gatsby"]},"fields":{"slug":"/test-post-after-netlify-cms-install/"}}},{"node":{"excerpt":"Curabitur tincidunt hendrerit justo. Praesent nisl dui, mollis vitae quam eu, dignissim faucibus lorem. Sed vitae erat at sem suscipit laoreet nec vel diam.","html":"<p>Curabitur tincidunt hendrerit justo. Praesent nisl dui, mollis vitae quam eu, dignissim faucibus lorem. Sed vitae erat at sem suscipit laoreet nec vel diam.</p>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <iframe src=\"https://www.youtube.com/embed/-BIQjRd3NGk\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>","id":"820b15bc-62e8-542f-839f-9fe76b120605","frontmatter":{"title":"Using Emmet with React in Visual Studio Code - 2019","date":"March 20, 2019","tags":["react","vscode"]},"fields":{"slug":"/vscode-react-emmet/"}}},{"node":{"excerpt":"Video at YouTube.   Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sapien nisi, consequat nec dolor ut, lobortis vestibulum nunc. Nulla facilisi. Suspendisse leo urna, pulvinar ut…","html":"<p><a href=\"https://youtu.be/vAP8NLDzGwc\">Video at YouTube</a>. <br></p>\n<h2><div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <iframe src=\"https://www.youtube.com/embed/vAP8NLDzGwc\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div></iframe></h2>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sapien nisi, consequat nec dolor ut, lobortis vestibulum nunc. Nulla facilisi. Suspendisse leo urna, pulvinar ut pretium sit amet, consequat eget sapien. Nam ultricies in nulla finibus feugiat. Maecenas lacinia, lorem quis egestas convallis, tortor nunc consectetur est, vel finibus odio dui et nunc.</p>\n<h3>noGlobalFlag.js</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let str1 = &quot;The sun is out today.&quot;;\nlet str2 = &quot;Let&#39;s go for a run today.&quot;\nlet str3 = &quot;Regular expressions can sometimes be fun.&quot;\nlet str4 = &quot;A hot dog without a bun ain&#39;t no fun.&quot;\nlet unRegex = /.un/;\nconsole.log(unRegex.test(str1));\n\nconsole.log(unRegex.test(str2));\n\nconsole.log(unRegex.test(str3));\n\nconsole.log(unRegex.test(str4));</code></pre></div>\n<br>\n<p>Proin quis ante ut felis lacinia dignissim quis ac risus. Vestibulum a maximus est. Pellentesque malesuada eros ac diam aliquam, non pulvinar magna sodales.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">true\ntrue\ntrue\ntrue\n[Finished in 0.883s]</code></pre></div>\n<br>\n<p> Fusce hendrerit malesuada quam, ut accumsan massa efficitur et. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nullam vitae ornare sem, eget volutpat mauris. Praesent aliquet condimentum dui non bibendum. Nam dapibus rutrum mi sit amet luctus. Proin id vehicula risus. Nullam dictum, elit sit amet molestie eleifend, felis dolor scelerisque risus, sed dictum odio dolor id justo. Integer consectetur dui non tortor scelerisque, non vulputate sem laoreet.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">true\ntrue\ntrue\nfalse\n[Finished in 0.892s]</code></pre></div>\n<br>\n<p>Nunc blandit purus sit amet justo vehicula, at venenatis ante tempus. Integer sagittis ultrices lorem, ut faucibus erat molestie quis. Phasellus semper orci nisl, egestas maximus risus porta sit amet. Fusce vitae egestas sem. Nunc sagittis, erat sodales maximus tempus, magna diam iaculis ex, ut feugiat odio libero sit amet lectus. Suspendisse elit turpis, volutpat laoreet consequat ac, ultricies eu sem. Donec non orci in justo porta iaculis. Donec pulvinar nunc quis viverra volutpat. Quisque et orci non enim sodales eleifend. Etiam in enim id nulla posuere lacinia. Ut rutrum pharetra nisi quis feugiat.</p>\n<h3>globalFlag.js</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let str1 = &quot;The sun is out today.&quot;;\nlet str2 = &quot;Let&#39;s go for a run today.&quot;\nlet str3 = &quot;Regular expressions can sometimes be fun.&quot;\nlet str4 = &quot;A hot dog without a bun ain&#39;t no fun.&quot;\nlet unRegex = /.un/g;\n\nconsole.log(unRegex.test(str1));\nconsole.log(unRegex.lastIndex);\n\nconsole.log(unRegex.test(str2));\nconsole.log(unRegex.lastIndex);\n\nconsole.log(unRegex.test(str3));\nconsole.log(unRegex.lastIndex);\n\nconsole.log(unRegex.test(str4));\nconsole.log(unRegex.lastIndex);</code></pre></div>\n<br>\n<p>Cras arcu lectus, euismod a lacinia a, cursus vitae magna. Aenean ultricies, enim id pharetra ultricies, ligula lectus congue tellus, ac lobortis ex elit at nulla. Sed lobortis vitae tortor sed laoreet. Praesent porta bibendum ullamcorper.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">true\n7\ntrue\n18\ntrue\n40\nfalse\n0\n[Finished in 0.911s]</code></pre></div>\n<br>\n<p>Integer fermentum euismod risus, vitae fringilla erat condimentum at. Suspendisse luctus egestas dui, eu dictum sem tincidunt sed. Sed efficitur eget orci eu dictum. Etiam faucibus, enim nec tincidunt sollicitudin, diam neque ultricies magna, eget ultrices sem tortor non justo. Vestibulum viverra tincidunt elit sit amet gravida. Morbi sed tempus odio. Nunc efficitur ultricies elit et porta. Praesent finibus placerat felis, vitae efficitur ligula sagittis non. Nam fringilla malesuada ligula ullamcorper dignissim.</p>\n<p>Morbi mauris lacus, vehicula eget ullamcorper et, fringilla at ipsum. Nam tempus felis ex, congue varius urna consectetur eget. Cras tempor condimentum accumsan. In hac habitasse platea dictumst. Nulla pharetra mauris enim, quis dictum ipsum dictum sed. Sed luctus eros volutpat, luctus augue et, tempus ante. Sed imperdiet diam id luctus faucibus. Sed ullamcorper suscipit arcu, in dictum lectus ultricies et. Donec accumsan a ipsum sed aliquet. Nulla auctor justo eget tincidunt egestas. Cras blandit, ante vitae facilisis hendrerit, justo mauris fermentum diam, id congue diam velit eu ipsum. Nullam pulvinar auctor tincidunt. Maecenas felis velit, bibendum ac purus nec, cursus lacinia nulla. Sed posuere orci sapien, id accumsan eros feugiat vel. Aenean convallis lacinia orci. In metus elit, iaculis vitae nisi vel, iaculis vehicula mi.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let str1 = &quot;The sun is out today.&quot;;\nlet str2 = &quot;Let&#39;s go for a run today.&quot;\nlet str3 = &quot;Regular expressions can sometimes be fun.&quot;\nlet str4 = &quot;A hot dog without a bun ain&#39;t no fun.&quot;\nlet unRegex = /.un/g;\n\nvar myMatches = str4.match(unRegex);\nconsole.log(myMatches);</code></pre></div>\n<br>\n<p>Nam elementum augue vel nulla consectetur elementum.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[ &#39;bun&#39;, &#39;fun&#39; ]\n[Finished in 1.845s]</code></pre></div>\n<br>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\">MDN Web Docs - test()</a><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\">MDN Web Docs - exec()</a></p>","id":"a41d9f53-e325-5de4-b77a-349de716d861","frontmatter":{"title":"JavaScript Regular Expressions and the Test() Method","date":"January 06, 2019","tags":["javascript"]},"fields":{"slug":"/regex-and-test-method/"}}},{"node":{"excerpt":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sapien nisi, consequat nec dolor ut, lobortis vestibulum nunc. Nulla facilisi. Suspendisse leo urna, pulvinar ut pretium sit amet…","html":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sapien nisi, consequat nec dolor ut, lobortis vestibulum nunc. Nulla facilisi. Suspendisse leo urna, pulvinar ut pretium sit amet, consequat eget sapien. Nam ultricies in nulla finibus feugiat. Maecenas lacinia, lorem quis egestas convallis, tortor nunc consectetur est, vel finibus odio dui et nunc. Proin quis ante ut felis lacinia dignissim quis ac risus. Vestibulum a maximus est. Pellentesque malesuada eros ac diam aliquam, non pulvinar magna sodales. Fusce hendrerit malesuada quam, ut accumsan massa efficitur et. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nullam vitae ornare sem, eget volutpat mauris. Praesent aliquet condimentum dui non bibendum. Nam dapibus rutrum mi sit amet luctus. Proin id vehicula risus. Nullam dictum, elit sit amet molestie eleifend, felis dolor scelerisque risus, sed dictum odio dolor id justo. Integer consectetur dui non tortor scelerisque, non vulputate sem laoreet:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const express = require(&#39;express&#39;)\nconst app = express()\nconst bodyParser = require(&#39;body-parser&#39;)\n\nconst cors = require(&#39;cors&#39;)\n\nconst mongoose = require(&#39;mongoose&#39;)\nmongoose.connect(process.env.DB_URI || &#39;mongodb://localhost/dbname&#39; )\n\napp.use(cors())\n\napp.use(bodyParser.urlencoded({extended: false}))\napp.use(bodyParser.json())\n\n\napp.use(express.static(&#39;public&#39;))\napp.get(&#39;/&#39;, (req, res) =&gt; {\n  res.sendFile(__dirname + &#39;/views/index.html&#39;)\n});\n\n\n// Not found middleware\napp.use((req, res, next) =&gt; {\n  return next({status: 404, message: &#39;not found&#39;})\n})\n\n\nconst listener = app.listen(process.env.PORT || 3000, () =&gt; {\n  console.log(&#39;Your app is listening on port &#39; + listener.address().port)\n})</code></pre></div>\n<br>\n<p>Nunc blandit purus sit amet justo vehicula, at venenatis ante tempus. Integer sagittis ultrices lorem, ut faucibus erat molestie quis. Phasellus semper orci nisl, egestas maximus risus porta sit amet. Fusce vitae egestas sem. Nunc sagittis, erat sodales maximus tempus, magna diam iaculis ex, ut feugiat odio libero sit amet lectus. Suspendisse elit turpis, volutpat laoreet consequat ac, ultricies eu sem. Donec non orci in justo porta iaculis. Donec pulvinar nunc quis viverra volutpat. Quisque et orci non enim sodales eleifend. Etiam in enim id nulla posuere lacinia. Ut rutrum pharetra nisi quis feugiat. Cras arcu lectus, euismod a lacinia a, cursus vitae magna. Aenean ultricies, enim id pharetra ultricies, ligula lectus congue tellus, ac lobortis ex elit at nulla. Sed lobortis vitae tortor sed laoreet. Praesent porta bibendum ullamcorper:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// Not found middleware\napp.use((req, res, next) =&gt; {\n  return next({status: 404, message: &#39;not found&#39;})\n})\n\napp.post(&#39;/api/users/new-user&#39;, (req, res) =&gt;{\n const firstName = req.body.first_name;\n const lastName  = req.body.last_name;\n res.json({first_name: firstName, last_name: lastName, &quot;status&quot;: &quot;registered&quot;});\n})</code></pre></div>\n<br>\n<p>Integer fermentum euismod risus, vitae fringilla erat condimentum at. Suspendisse luctus egestas dui, eu dictum sem tincidunt sed. Sed efficitur eget orci eu dictum. Etiam faucibus, enim nec tincidunt sollicitudin, diam neque ultricies magna, eget ultrices sem tortor non justo. Vestibulum viverra tincidunt elit sit amet gravida. Morbi sed tempus odio. Nunc efficitur ultricies elit et porta. Praesent finibus placerat felis, vitae efficitur ligula sagittis non. Nam fringilla malesuada ligula ullamcorper dignissim.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app.use((req, res, next) =&gt; {\n  console.log(&#39;fire 1&#39;)\n  return next({status: 404, message: &#39;not found&#39;})\n});\n\napp.post(&#39;/api/users/new-user&#39;, (req, res) =&gt;{\n  console.log(&#39;fire 2&#39;)\n  const firstName = req.body.first_name;\n  const lastName  = req.body.last_name;\n  res.json({first_name: firstName, last_name: lastName, &quot;status&quot;: &quot;registered&quot;});\n});</code></pre></div>\n<br>\n<p>Morbi mauris lacus, vehicula eget ullamcorper et, fringilla at ipsum. Nam tempus felis ex, congue varius urna consectetur eget. Cras tempor condimentum accumsan. In hac habitasse platea dictumst. Nulla pharetra mauris enim, quis dictum ipsum dictum sed. Sed luctus eros volutpat, luctus augue et, tempus ante:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Your app is listening on port 3000\nfire 1\n[object Object]</code></pre></div>\n<br>\n<p>Sed imperdiet diam id luctus faucibus. Sed ullamcorper suscipit arcu, in dictum lectus ultricies et. Donec accumsan a ipsum sed aliquet. Nulla auctor justo eget tincidunt egestas. Cras blandit, ante vitae facilisis hendrerit, justo mauris fermentum diam, id congue diam velit eu ipsum. Nullam pulvinar auctor tincidunt. Maecenas felis velit, bibendum ac purus nec, cursus lacinia nulla. Sed posuere orci sapien, id accumsan eros feugiat vel. Aenean convallis lacinia orci. In metus elit, iaculis vitae nisi vel, iaculis vehicula mi.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// not-found middleware\napp.use((req, res, next) =&gt; {\n  console.log(&#39;fire 1&#39;)\n  return next({status: 404, message: &#39;not found&#39;})\n});\n\n// error-handler middleware\napp.use((err, req, res, next) =&gt; {\n  console.log(&#39;fire 2&#39;)\n  console.log(err);\n  let errCode, errMessage\n\n  if (err.errors) {\n    // mongoose validation error\n    errCode = 400 // bad request\n    const keys = Object.keys(err.errors)\n    // report the first validation error\n    errMessage = err.errors[keys[0]].message\n  } else {\n    // generic or custom error\n    errCode = err.status || 500\n    errMessage = err.message || &#39;Internal Server Error&#39;\n  }\n  res.status(errCode).type(&#39;txt&#39;)\n    .send(errMessage)\n});\n\napp.post(&#39;/api/users/new-user&#39;, (req, res) =&gt;{\n  console.log(&#39;fire 3&#39;)\n  const firstName = req.body.first_name;\n  const lastName  = req.body.last_name;\n  res.json({first_name: firstName, last_name: lastName, &quot;status&quot;: &quot;registered&quot;});\n});</code></pre></div>\n<br>\n<p>Nam elementum augue vel nulla consectetur elementum. Curabitur tincidunt hendrerit justo. Praesent nisl dui, mollis vitae quam eu, dignissim faucibus lorem:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Your app is listening on port 3000\nfire 1\nfire 2\n{ status: 404, message: &#39;not found&#39; }</code></pre></div>\n<br>\n<p>Sed vitae erat at sem suscipit laoreet nec vel diam. Donec at quam sapien. Nulla quis egestas metus, ut tempus elit. Vivamus placerat diam ac ultrices finibus. Aenean vitae molestie eros. Curabitur pulvinar ornare est volutpat consequat. Vivamus ullamcorper pharetra leo ac volutpat. Curabitur efficitur egestas posuere. Duis ut sagittis diam, sed sollicitudin lectus. Phasellus in lorem maximus, volutpat felis non, fringilla mi. Curabitur in fringilla sem, nec rhoncus elit. Aenean non ante dignissim elit suscipit hendrerit sit amet nec eros. Curabitur feugiat, metus non convallis scelerisque, nisl urna imperdiet velit, eget semper enim ante eget lorem.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app.post(&#39;/api/users/new-user&#39;, (req, res) =&gt;{\n  console.log(&#39;fire 1&#39;)\n  const firstName = req.body.first_name;\n  const lastName  = req.body.last_name;\n  res.json({first_name: firstName, last_name: lastName, &quot;status&quot;: &quot;registered&quot;});\n});\n\n\n// Not found middleware\napp.use((req, res, next) =&gt; {\n  console.log(&#39;fire 2&#39;)\n  return next({status: 404, message: &#39;not found&#39;})\n});\n\n// Error Handling middleware\napp.use((err, req, res, next) =&gt; {\n  console.log(&#39;fire 3&#39;)\n  console.log(err);\n  let errCode, errMessage\n\n  if (err.errors) {\n    // mongoose validation error\n    errCode = 400 // bad request\n    const keys = Object.keys(err.errors)\n    // report the first validation error\n    errMessage = err.errors[keys[0]].message\n  } else {\n    // generic or custom error\n    errCode = err.status || 500\n    errMessage = err.message || &#39;Internal Server Error&#39;\n  }\n  res.status(errCode).type(&#39;txt&#39;)\n    .send(errMessage)\n})</code></pre></div>\n<br>\n<p>Nulla pharetra mauris enim, quis dictum ipsum dictum sed. Sed luctus eros volutpat, luctus augue et, tempus ante. Sed imperdiet diam id luctus faucibus. Sed ullamcorper suscipit arcu, in dictum lectus ultricies et. Donec accumsan a ipsum sed aliquet. Nulla auctor justo eget tincidunt egestas:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Your app is listening on port 3000\nfire 1</code></pre></div>\n<br>\n<p> Donec at quam sapien. Nulla quis egestas metus, ut tempus elit. Vivamus placerat diam ac ultrices finibus. Aenean vitae molestie eros. Curabitur pulvinar ornare est volutpat consequat. Vivamus ullamcorper pharetra leo ac volutpat. Curabitur efficitur egestas posuere.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{&quot;first_name&quot;:&quot;Walter&quot;,&quot;last_name&quot;:&quot;White&quot;,&quot;status&quot;:&quot;registered&quot;}</code></pre></div>\n<br>\n<p>consectetur elementum.</p>","id":"7e7f2a19-9603-58f9-8ba1-022f7cfa7b4b","frontmatter":{"title":"Misplaced Middleware in Express","date":"December 29, 2018","tags":["nodejs","express"]},"fields":{"slug":"/misplaced-middleware-express/"}}},{"node":{"excerpt":"This blog template is designed for web developers. Whether you're a professional web developer or are just getting started in the world of web development, this Gatsby starter is ready to go, right…","html":"<p>This blog template is designed for web developers. Whether you're a professional web developer or are just getting started in the world of web development, this Gatsby starter is ready to go, right out the of box. Its minimalist design makes it easy to tailor to your needs. But, you'll definitely want to make use of the tech tags and developer social media links, and maybe even make some of your own.\n<br></p>\n<p><img src=\"../../../src/images/gatsby-icon.png\"></p>\n<p>Inline images in markdown supported as well.</p>","id":"2bcec23a-103b-5c84-8a75-d42cf286031c","frontmatter":{"title":"Welcome To My Web Developer Blog","date":"August 20, 2018","tags":["react","vscode","git","css","python","ruby","java","angular","html","php","mongodb","graphql","gatsby"]},"fields":{"slug":"/welcome-to-my-web-developer-blog/"}}}]}},"pageContext":{}},"staticQueryHashes":["1539267777","63159454","81262063"]}