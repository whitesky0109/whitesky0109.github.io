{"version":3,"sources":["webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/TechTags.js","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/pages/index.js","webpack:///./src/components/tags/TechTag.js"],"names":["Bio","author","tagline","className","src","willjw3","style","maxWidth","alt","SocialLinks","contacts","href","linkedin","title","size","color","github","stackoverflow","freecodecamp","twitter","TechTags","props","labels","posts","tags","map","label","count","forEach","post","node","frontmatter","includes","tag","filter","category","techTags","i","push","TechTag","key","tech","name","getTechTags","Sidebar","query","render","data","site","siteMetadata","to","allMarkdownRemark","edges","IndexPage","nextPage","toString","hasNextPage","totalCount","keywords","id","fields","slug","date","excerpt","rel","textDecoration","fontSize","role","viewBox","xmlns","width","height","fill","d"],"mappings":"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","file":"component---src-pages-index-js-27fe5dc74475c66d91ca.js","sourcesContent":["import React from \"react\"\r\nimport \"./sidebar.css\"\r\n\r\nimport willjw3 from \"../../images/willjw3.jpg\"\r\n\r\nconst Bio = ({ author, tagline }) => {\r\n\r\n    return (\r\n        <div className=\"bio-main w-75\">\r\n            <img src={willjw3} style={{ maxWidth: `100px` }} className=\"profile-img\" alt=\"\" />\r\n            <h3 className=\"mt-2 author-bio\">{author}</h3>\r\n            <small className=\"text-muted\">{tagline}</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bio","import React from \"react\"\r\nimport {\r\n    FaLinkedin,\r\n    FaGithubSquare,\r\n    FaStackOverflow,\r\n    FaFreeCodeCamp,\r\n    FaTwitterSquare\r\n} from \"react-icons/fa\"\r\nimport \"./sidebar.css\"\r\n\r\n\r\nconst SocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"side-social-links float-left mt-3 mb-3\">\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.linkedin}>\r\n                <span title=\"Linked In\">\r\n                    <FaLinkedin size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.stackoverflow}>\r\n                <span title=\"Stack Overflow\">\r\n                    <FaStackOverflow size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.freecodecamp}>\r\n                <span title=\"freeCodeCamp\">\r\n                    <FaFreeCodeCamp size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.twitter}>\r\n                <span title=\"Twitter\">\r\n                    <FaTwitterSquare size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks","import React from \"react\"\r\n\r\nimport TechTag from \"../tags/TechTag\"\r\n\r\nconst TechTags = (props) => {\r\n    const labels = props.labels\r\n    const posts = props.posts\r\n\r\n    const labelCount = labels.map(label => {\r\n        let count = 0;\r\n        posts.forEach(post => {\r\n            if (post.node.frontmatter.tags.includes(label.tag)) {\r\n                count = count + 1\r\n            }\r\n        })\r\n        return [label.tag, count]\r\n    })\r\n\r\n    const categories = labelCount.filter(label => {\r\n        return label[1] > 0\r\n    })\r\n\r\n    const tags = categories.map(category => {\r\n        return category[0]\r\n    })\r\n\r\n\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            labels.forEach((label) => {\r\n                if (tag === label.tag) {\r\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n                }\r\n            })\r\n        })\r\n        return techTags\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4>Tech Topics</h4>\r\n            <div className=\"d-block\">\r\n                {getTechTags(tags)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TechTags","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\nimport Bio from \"./Bio\"\r\nimport \"./sidebar.css\"\r\n\r\nimport SocialLinks from \"./SocialLinks\"\r\nimport TechTags from \"./TechTags\"\r\n\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <StaticQuery\r\n            query={graphql`\r\n                query SiteBioQuery {\r\n                    site {\r\n                        siteMetadata {\r\n                            title\r\n                            tagline\r\n                            author\r\n                            contacts {\r\n                                linkedin\r\n                                github\r\n                                stackoverflow\r\n                                freecodecamp\r\n                                twitter\r\n                            }\r\n                            labels {\r\n                                tag\r\n                                tech\r\n                                name \r\n                                size \r\n                                color\r\n                            }\r\n                        }\r\n                    }\r\n                    allMarkdownRemark(\r\n                        limit: 10\r\n                        sort: { fields: [frontmatter___date], order: DESC }\r\n                        filter: { frontmatter: { published: { eq: true } } }\r\n                    ) {\r\n                        edges {\r\n                            node {\r\n                                frontmatter {\r\n                                    tags\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => (\r\n                <>\r\n                    <div className=\"sidebar-main border-right\">\r\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\r\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\r\n                        <div className=\"page-links\">\r\n                            <Link to=\"/\"><span className=\"text-dark d-block py-1\">Blog Home</span></Link>\r\n                            <Link to=\"/about\"><span className=\"text-dark d-block py-1\">About</span></Link>\r\n                            <Link to=\"/archive\"><span className=\"text-dark d-block py-1\">Archive</span></Link>\r\n                        </div>\r\n                        <div className=\"tech-tags mt-4\">\r\n                            <TechTags labels={data.site.siteMetadata.labels} posts={data.allMarkdownRemark.edges} />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"./index.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const posts = data.allMarkdownRemark.edges\r\n  const labels = data.site.siteMetadata.labels\r\n  const currentPage = 1\r\n  const postsPerPage = 3 // see limit in graphql query below\r\n  const nextPage = \"/\" + (currentPage + 1).toString()\r\n  const hasNextPage = data.allMarkdownRemark.totalCount > postsPerPage\r\n\r\n  const getTechTags = (tags) => {\r\n    const techTags = []\r\n    tags.forEach((tag, i) => {\r\n      labels.forEach((label) => {\r\n        if (tag === label.tag) {\r\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n        }\r\n      })\r\n    })\r\n    return techTags\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\r\n      <div className=\"index-main\">\r\n        <div className=\"sidebar px-4 py-2\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"post-list-main\">\r\n          {posts.map((post) => {\r\n            const tags = post.node.frontmatter.tags\r\n            return (\r\n              <div key={post.node.id} className=\"container mt-5\">\r\n                <Link\r\n                  to={post.node.fields.slug}\r\n                  className=\"text-dark\"\r\n                >\r\n                  <h2 className=\"title\">{post.node.frontmatter.title}</h2>\r\n                </Link>\r\n                <small className=\"d-block text-info\"><i>Posted on {post.node.frontmatter.date}</i>\r\n                </small>\r\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\r\n                <Link\r\n                  to={post.node.fields.slug}\r\n                  className=\"text-primary\"\r\n                >\r\n                  <small className=\"d-inline-block ml-3\"> Read full post</small>\r\n                </Link>\r\n                <div className=\"d-block\">\r\n                  {getTechTags(tags)}\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n          {hasNextPage &&\r\n            <div className=\"mt-4 text-center\">\r\n              <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\r\n                <span className=\"text-dark\">Next Page →</span>\r\n              </Link>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n         query IndexQuery {\r\n           site {\r\n             siteMetadata {\r\n               title \r\n               author\r\n               labels {\r\n                 tag\r\n                 tech \r\n                 name \r\n                 size \r\n                 color\r\n               } \r\n             }\r\n           }\r\n           allMarkdownRemark(\r\n             limit: 3\r\n             sort: { fields: [frontmatter___date], order: DESC }\r\n             filter: { frontmatter: { published: { eq: true } } }\r\n           ) {\r\n             totalCount\r\n             edges {\r\n               node {\r\n                 excerpt(pruneLength: 200)\r\n                 html\r\n                 id\r\n                 frontmatter {\r\n                   title\r\n                   date(formatString: \"MMMM DD, YYYY\")\r\n                   tags\r\n                 }\r\n                 fields {\r\n                   slug\r\n                 }\r\n               }\r\n             }\r\n           }\r\n         }\r\n       `\r\n\r\nexport default IndexPage\r\n\r\n","import React from \"react\"\r\n\r\nimport \"./tags.css\"\r\nimport { Link } from \"gatsby\";\r\n\r\nconst TechTag = (props) => {\r\n    const { tag, tech, name, size, color } = props\r\n\r\n    return (\r\n        <div className=\"d-inline-block p-1\">\r\n            <Link to={`/tags/${tag}/`}>\r\n                <button\r\n                    className=\"tech-tag text-white\">\r\n                    <p className=\"d-inline\">{tech} </p>\r\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} style={{fill: `${color}`}}>\r\n                            <title>{tech}</title>\r\n                            <path\r\n                                d={name} />\r\n                        </svg></div>\r\n                </button>\r\n            </Link>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TechTag"],"sourceRoot":""}